<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<MSBuildCommunityTasksPath Condition=" '$(MSBuildCommunityTasksPath)' == '' ">..\..\..\packages\MSBuildTasks.1.4.0.56\tools</MSBuildCommunityTasksPath>
	</PropertyGroup>

	<Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets"/>

	<UsingTask AssemblyFile="$(DigillectBuildTasksPath)Digillect.Build.Tasks.dll" TaskName="FileVersionInfo"/>

	<PropertyGroup Condition=" '$(NuSpecFileName)' == '' ">
		<NuSpecFileName>$(MSBuildProjectName).nuspec</NuSpecFileName>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(NuSpecFilePath)' == '' ">
		<NuSpecFilePath>$(MSBuildProjectDirectory)\$(NuSpecFileName)</NuSpecFilePath>
	</PropertyGroup>

	<ItemGroup>
		<NuSpec Include="$(NuSpecFilePath)"/>
	</ItemGroup>

	<ItemGroup Condition=" '@(Content)' == '' ">
		<Content Include="content\**"/>
	</ItemGroup>

	<ItemGroup Condition=" '@(Tools)' == '' ">
		<Tools Include="tools\**"/>
	</ItemGroup>

	<Target Name="BeforeClean"/>
	<Target Name="AfterClean"/>
	<Target Name="ProcessClean">
		<RemoveDir Directories="$(OutputPath)" ContinueOnError="true"/>
	</Target>

	<Target Name="Clean" DependsOnTargets="BeforeClean;ProcessClean;AfterClean"/>

	<Target Name="BeforeCopy"/>
	<Target Name="AfterCopy"/>
	<Target Name="ProcessCopy">
		<Copy SourceFiles="@(NuSpec)" DestinationFolder="$(OutputPath)"/>

		<Copy SourceFiles="@(Lib)" DestinationFolder="$(OutputPath)\lib\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibNet11)" DestinationFolder="$(OutputPath)\lib\net11\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibNet20)" DestinationFolder="$(OutputPath)\lib\net20\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibNet20Compact)" DestinationFolder="$(OutputPath)\lib\net20-cf\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibNet35)" DestinationFolder="$(OutputPath)\lib\net35\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibNet40)" DestinationFolder="$(OutputPath)\lib\net40\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibNet40Client)" DestinationFolder="$(OutputPath)\lib\net40-client\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibNet40Full)" DestinationFolder="$(OutputPath)\lib\net40-full\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibNet40Compact)" DestinationFolder="$(OutputPath)\lib\net40-cf\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibNet45)" DestinationFolder="$(OutputPath)\lib\net45\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibWinRT45)" DestinationFolder="$(OutputPath)\lib\win8\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWin8)" DestinationFolder="$(OutputPath)\lib\win8\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWin8JS)" DestinationFolder="$(OutputPath)\lib\win8-javascript\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWin8Managed)" DestinationFolder="$(OutputPath)\lib\win8-managed\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWin8Native)" DestinationFolder="$(OutputPath)\lib\win8-native\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibSL3)" DestinationFolder="$(OutputPath)\lib\sl3\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibSL4)" DestinationFolder="$(OutputPath)\lib\sl4\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibSL5)" DestinationFolder="$(OutputPath)\lib\sl5\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibWP7)" DestinationFolder="$(OutputPath)\lib\wp7\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWP70)" DestinationFolder="$(OutputPath)\lib\wp7\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWP71)" DestinationFolder="$(OutputPath)\lib\wp71\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWP8)" DestinationFolder="$(OutputPath)\lib\wp8\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWP80)" DestinationFolder="$(OutputPath)\lib\wp8\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibWP81)" DestinationFolder="$(OutputPath)\lib\wpa81\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibPortable)" DestinationFolder="$(OutputPath)\lib\portable-%(LibPortable.Profile)\%(RecursiveDir)"/>

		<Copy SourceFiles="@(LibMonoAndroid)" DestinationFolder="$(OutputPath)\lib\MonoAndroid\%(RecursiveDir)"/>
		<Copy SourceFiles="@(LibMonoTouch)" DestinationFolder="$(OutputPath)\lib\MonoTouch\%(RecursiveDir)"/>

		<Copy SourceFiles="@(Content)" DestinationFolder="$(OutputPath)\content\%(RecursiveDir)"/>
		<Copy SourceFiles="@(Tools)" DestinationFolder="$(OutputPath)\tools\%(RecursiveDir)"/>
	</Target>

	<Target Name="Copy" DependsOnTargets="BeforeCopy;ProcessCopy;AfterCopy"/>

	<Target Name="BeforePrepare"/>
	<Target Name="AfterPrepare"/>

	<Target Name="FetchPackageVersionFromAssembly" Condition=" '$(VersionAssembly)' != '' ">
		<Message Text="Using version from assembly '$(VersionAssembly)'"/>

		<FileVersionInfo Files="$(VersionAssembly)">
			<Output TaskParameter="FileVersionInfos" ItemName="Info"/>
		</FileVersionInfo>

		<PropertyGroup>
			<PackageVersion>%(Info.VarFileVersion)</PackageVersion>
		</PropertyGroup>
	</Target>
	<Target Name="FetchPackageVersionFromSpecFile" Condition=" '$(VersionAssembly)' == '' ">
		<Message Text="Using version from spec file"/>

		<XmlRead
			Namespace="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd"
			XmlFileName="$(OutputPath)\$(NuSpecFileName)"
			XPath="/package/metadata/version">
			<Output TaskParameter="Value" PropertyName="OriginalPackageVersion"/>
		</XmlRead>

		<PropertyGroup>
			<PackageVersion>$(OriginalPackageVersion)</PackageVersion>
		</PropertyGroup>
	</Target>
	<Target Name="FetchPackageVersion" DependsOnTargets="FetchPackageVersionFromAssembly;FetchPackageVersionFromSpecFile"/>
	<Target Name="TransformPackageVersion"/>
	<Target Name="PrepareVersion" DependsOnTargets="FetchPackageVersion;TransformPackageVersion">
		<PropertyGroup>
			<OutputPackage>$(OutputPath)\$([System.IO.Path]::GetFileNameWithoutExtension( '$(NuSpecFileName)' )).$(PackageVersion).nupkg</OutputPackage>
		</PropertyGroup>

		<Message Text="Package version set to $(PackageVersion), output package set to $(OutputPackage)."/>
	</Target>
	<Target Name="ProcessPrepare" DependsOnTargets="PrepareVersion"/>

	<Target Name="Prepare" DependsOnTargets="BeforePrepare;ProcessPrepare;AfterPrepare"/>

	<Target Name="BeforePackage"/>
	<Target Name="AfterPackage"/>
	<Target Name="ProcessPackage">
		<NuGetPack File="$(NuSpecFileName)" Version="$(PackageVersion)" WorkingDirectory="$(OutputPath)"/>
	</Target>

	<Target Name="Package" DependsOnTargets="BeforePackage;ProcessPackage;AfterPackage"/>

	<Target Name="Build" DependsOnTargets="Clean;Copy;Prepare;Package"/>

	<Target Name="Push" DependsOnTargets="Build" Condition=" '$(NuGetServer)' != '' and '$(NuGetServerPassword)' != '' ">
		<NuGetPush File="$(OutputPackage)" Source="$(NuGetServer)" APIKey="$(NuGetServerPassword)"/>
	</Target>
</Project>
